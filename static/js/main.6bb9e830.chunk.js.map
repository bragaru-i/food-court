{"version":3,"sources":["img/food-cards/assorted-salads.jpg","img/about.jpg","img/chef-1.jpg","img/food-cards/avocado-cooked.jpg","img/food-cards/food-dinner.jpg","img/food-cards/blur-breakfast.jpg","img/food-cards/chocolate.jpg","img/food-cards/dessert.jpg","img/food-cards/pasta.jpg","img/food-cards/shrimps-salad.jpg","img/food-cards/plate.jpg","components/Header/Navigation/Navigation.js","Icons/icons/foodcourt.jsx","Icons/icons/tweeter.jsx","Icons/icons/vk.jsx","Icons/icons/messenger.jsx","Icons/icons/calendar.jsx","Icons/icons/instagram.jsx","Icons/icons/facebook.jsx","Icons/icons/checkbox-active.jsx","Icons/icons/checkbox.jsx","Icons/icons/menu-toggler.jsx","Icons/index.js","components/Header/Header.js","components/About/About.js","components/Chef/Chef.js","components/Book/Book.js","components/Menu/Slide.js","components/Menu/Menu.js","App.js","index.js"],"names":["module","exports","Navigation","useEffect","nav","document","getElementById","about","sticky","offsetTop","scrollCallBack","window","addEventListener","pageYOffset","classList","add","console","log","remove","removeEventListener","id","className","SVG","style","fill","width","height","viewBox","xmlns","strokeLinecap","fillRule","fontSize","stroke","strokeWidth","d","vectorEffect","xmlnsXlink","clipRule","Icon","props","name","Header","position","About","src","aboutImage","alt","Chef","chef1","textAlign","Book","onSubmit","e","preventDefault","alert","type","placeholder","margin","Slide","img","undefined","sliderImg","Menu","items","useState","current","setCurrent","images","img1","img2","img3","img4","img5","img6","img7","img8","img9","next","length","setTimeout","clearTimeout","onClick","tag","currentTarget","dataset","index","description","map","item","i","key","data-index","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.6bb9e830.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/assorted-salads.57e37509.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about.721cee7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chef-1.6baf8cc7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avocado-cooked.0ffdf986.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food-dinner.0082b7bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blur-breakfast.0b697e7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chocolate.623a038d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dessert.103c94f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pasta.2cf7b3ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shrimps-salad.652067c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/plate.d6653c10.jpg\";","import React, { useEffect, Fragment } from 'react';\n\nimport './Navigation.css';\n\nconst Navigation = () => {\n  useEffect(() => {\n    let nav = document.getElementById('nav-bar');\n    let about = document.getElementById('about');\n    const sticky = about.offsetTop;\n    const scrollCallBack = window.addEventListener('scroll', () => {\n      if (window.pageYOffset > sticky) {\n        nav.classList.add('sticky');\n        if (window.pageYOffset === about.offsetTop) {\n          console.log('matches');\n        }\n      } else {\n        nav.classList.remove('sticky');\n      }\n    });\n    return () => {\n      window.removeEventListener('scroll', scrollCallBack);\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <nav id=\"nav-bar\" className=\"navbar\">\n        <ul className=\"navbar__items\">\n          <li className=\"navbar__item\">\n            <span>Home</span>\n          </li>\n          <li className=\"navbar__item active\">\n            <span>About</span>\n          </li>\n          <li className=\"navbar__item\">\n            <span>Chef</span>\n          </li>\n          <li className=\"navbar__item\">\n            <span>Book a Table</span>\n          </li>\n\n          <li className=\"navbar__item\">\n            <span>Menu</span>\n          </li>\n          <li className=\"navbar__item\">\n            <span>Events</span>\n          </li>\n          <li className=\"navbar__item\">\n            <span>Food BLOG</span>{' '}\n          </li>\n          <li className=\"navbar__item\">\n            <span>Contact</span>\n          </li>\n        </ul>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  height = '100%',\n  className = 'svg-icon',\n  viewBox = '0 0 56 57',\n}) => (\n  <svg\n    className={`svg-icon ${className}`}\n    width={width}\n    height={height}\n    viewBox=\"0 0 353.1 94.4\"\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g\n      id=\"svgGroup\"\n      strokeLinecap=\"round\"\n      fillRule=\"evenodd\"\n      fontSize=\"9pt\"\n      stroke=\"#000\"\n      strokeWidth=\"0.25mm\"\n      fill={fill}\n    >\n      <path\n        d=\"M 25.601 38 L 16.701 38.3 A 192.58 192.58 0 0 1 15.077 47.95 A 239.771 239.771 0 0 1 13.601 55 Q 11.866 61.939 9.153 62.859 A 2.636 2.636 0 0 1 8.301 63 A 9.689 9.689 0 0 1 5.758 62.651 A 11.184 11.184 0 0 1 5.251 62.5 Q 3.701 62 3.601 61 A 7.568 7.568 0 0 1 3.78 59.503 Q 4.285 57.053 6.219 52.705 A 91.564 91.564 0 0 1 6.651 51.75 A 228.348 228.348 0 0 0 7.705 49.42 Q 9.28 45.88 9.899 44.086 A 12.228 12.228 0 0 0 10.201 43.1 L 11.401 38.4 A 12.94 12.94 0 0 0 10.836 38.472 Q 9.756 38.629 7.651 39.05 A 38.751 38.751 0 0 1 6.035 39.34 Q 4.48 39.583 3.358 39.599 A 10.96 10.96 0 0 1 3.201 39.6 Q 1.155 39.6 0.417 38.864 A 1.439 1.439 0 0 1 0.001 37.8 Q 0.001 37.198 1.664 36.67 A 13.117 13.117 0 0 1 2.251 36.5 A 27.877 27.877 0 0 1 5.408 35.844 A 24.083 24.083 0 0 1 6.601 35.7 L 12.201 35.2 Q 13.301 29.8 14.401 22.3 L 5.601 23.4 Q 3.757 23.4 3.046 22.796 A 1.244 1.244 0 0 1 2.601 21.8 A 0.573 0.573 0 0 1 2.783 21.41 Q 3.155 21.015 4.29 20.637 A 13.822 13.822 0 0 1 4.901 20.45 A 28.322 28.322 0 0 1 7.26 19.886 A 21.824 21.824 0 0 1 9.201 19.6 L 14.801 19 A 337.35 337.35 0 0 1 15.346 15.19 Q 16.488 7.538 17.301 5.1 Q 18 2.389 19.082 2.049 A 1.055 1.055 0 0 1 19.401 2 A 2.118 2.118 0 0 1 20.117 2.117 A 1.868 1.868 0 0 1 20.751 2.5 A 1.515 1.515 0 0 1 21.15 3.113 Q 21.301 3.524 21.301 4.1 A 7.05 7.05 0 0 1 21.191 5.306 Q 21.092 5.878 20.902 6.495 A 12.45 12.45 0 0 1 20.901 6.5 A 15.718 15.718 0 0 1 20.607 7.37 Q 20.456 7.774 20.299 8.112 A 7.02 7.02 0 0 1 20.051 8.6 A 3.634 3.634 0 0 0 19.794 9.183 Q 19.538 9.916 19.401 11.05 A 83.826 83.826 0 0 0 19.312 11.822 Q 19.097 13.75 18.637 18.34 A 2017.226 2017.226 0 0 0 18.601 18.7 Q 25.701 18 32.601 17.6 Q 33.923 9.1 34.844 5.684 A 23.528 23.528 0 0 1 34.951 5.3 A 15.079 15.079 0 0 1 35.318 4.179 Q 35.958 2.473 36.719 2.103 A 0.977 0.977 0 0 1 37.151 2 A 1.799 1.799 0 0 1 37.646 2.062 Q 38.2 2.221 38.348 2.787 A 1.842 1.842 0 0 1 38.401 3.25 A 5.921 5.921 0 0 1 38.211 4.704 A 8.058 8.058 0 0 1 37.801 5.9 A 158.537 158.537 0 0 0 37.495 8.231 Q 37.026 12 36.501 17.4 A 467.214 467.214 0 0 1 40.117 17.181 Q 44.586 16.93 47.008 16.903 A 49.635 49.635 0 0 1 47.551 16.9 A 11.387 11.387 0 0 1 48.614 16.945 Q 50.801 17.152 50.801 18.3 Q 50.801 18.764 50.285 19.787 A 13.532 13.532 0 0 1 50.201 19.95 A 5.13 5.13 0 0 1 49.617 20.82 Q 49.02 21.55 48.051 22.3 Q 46.719 23.331 44.574 23.476 A 10.727 10.727 0 0 1 43.851 23.5 A 22.478 22.478 0 0 1 42.354 23.444 Q 39.851 23.275 35.801 22.6 Q 35.188 28.113 34.693 31.573 A 105.4 105.4 0 0 1 34.401 33.5 A 429.312 429.312 0 0 1 37.879 33.281 Q 42.181 33.03 44.525 33.003 A 46.529 46.529 0 0 1 45.051 33 A 10.699 10.699 0 0 1 46.081 33.045 Q 47.087 33.143 47.615 33.453 A 1.054 1.054 0 0 1 48.201 34.4 Q 48.201 34.9 47.551 35.9 Q 47.085 36.616 46.158 37.333 A 11.675 11.675 0 0 1 45.351 37.9 A 5.2 5.2 0 0 1 44.045 38.487 Q 42.78 38.873 40.955 38.898 A 18.631 18.631 0 0 1 40.701 38.9 Q 37.807 38.9 34.215 38.551 A 95.131 95.131 0 0 1 33.701 38.5 A 331.127 331.127 0 0 1 31.62 50.509 A 371.32 371.32 0 0 1 30.801 54.65 A 37.69 37.69 0 0 1 30.125 57.461 Q 28.918 61.692 27.207 62.691 A 2.162 2.162 0 0 1 26.101 63 Q 24.701 63 23.351 62.5 A 3.537 3.537 0 0 1 22.754 62.219 Q 22.441 62.03 22.242 61.796 A 1.42 1.42 0 0 1 21.901 61 A 9.128 9.128 0 0 1 22.064 59.423 Q 22.565 56.627 24.601 51.5 Q 27.127 45.137 27.64 43.327 A 7.637 7.637 0 0 0 27.701 43.1 L 28.901 38.1 A 28.75 28.75 0 0 0 27.924 38.043 Q 26.913 38 25.601 38 Z M 229.801 45.5 A 12.613 12.613 0 0 0 230.188 44.906 Q 230.617 44.213 231.197 43.14 A 79.825 79.825 0 0 0 231.801 42 A 125.333 125.333 0 0 1 232.561 40.664 Q 235.056 36.346 235.639 36.3 A 0.157 0.157 0 0 1 235.651 36.3 A 0.746 0.746 0 0 1 235.935 36.35 Q 236.259 36.483 236.296 36.968 A 1.729 1.729 0 0 1 236.301 37.1 A 12.575 12.575 0 0 1 235.752 40.596 Q 234.627 44.461 231.201 49.5 A 33.521 33.521 0 0 1 223.622 57.594 A 27.501 27.501 0 0 1 206.701 63 Q 202.401 63 198.801 61 A 17.325 17.325 0 0 1 194.97 58.154 A 15.169 15.169 0 0 1 193.101 55.9 Q 188.801 49.6 188.801 42.7 A 54.453 54.453 0 0 1 190.047 30.715 Q 192.027 21.933 197.153 15.498 A 34.582 34.582 0 0 1 197.851 14.65 Q 206.901 4 219.301 4 A 13.143 13.143 0 0 1 222.839 4.454 A 10.065 10.065 0 0 1 227.001 6.75 Q 230.001 9.5 230.001 13.7 Q 230.001 17.9 227.901 21.5 Q 225.801 25.1 222.851 25.1 A 8.125 8.125 0 0 1 221.85 25.044 Q 220.818 24.915 220.333 24.49 A 1.253 1.253 0 0 1 219.901 23.5 A 4.113 4.113 0 0 1 220.175 22.08 Q 220.632 20.838 221.851 19.4 A 9.909 9.909 0 0 0 222.961 17.819 Q 223.801 16.309 223.801 14.8 A 9.596 9.596 0 0 0 223.413 11.947 Q 222.437 8.812 218.998 7.991 A 11.866 11.866 0 0 0 216.251 7.7 Q 208.701 7.7 202.601 17.8 A 42.862 42.862 0 0 0 197.668 29.352 A 37.188 37.188 0 0 0 196.501 38.6 Q 196.501 46 200.701 51.75 A 13.431 13.431 0 0 0 210.431 57.386 A 18.347 18.347 0 0 0 212.501 57.5 A 14.931 14.931 0 0 0 220.496 55.047 Q 225.11 52.164 229.525 45.895 A 56.605 56.605 0 0 0 229.801 45.5 Z M 266.401 53.3 L 267.001 42.1 Q 267.001 33.361 267.668 31.092 A 1.687 1.687 0 0 1 268.001 30.4 Q 269.001 29.4 271.551 27.45 Q 274.101 25.5 275.251 25.5 Q 276.049 25.5 276.437 25.692 A 0.721 0.721 0 0 1 276.701 25.9 A 1.038 1.038 0 0 1 276.843 26.179 Q 277 26.626 277.001 27.491 A 9.049 9.049 0 0 1 277.001 27.5 A 20.915 20.915 0 0 1 275.932 34.006 A 25.296 25.296 0 0 1 275.101 36.2 A 152.62 152.62 0 0 0 274.31 41.628 Q 273.601 47.244 273.601 51.3 A 27.969 27.969 0 0 0 273.657 53.154 Q 273.927 57.2 275.501 57.2 A 3.479 3.479 0 0 0 277.056 56.79 Q 278.794 55.919 280.901 53.2 Q 283.863 49.378 286.824 41.997 A 98.24 98.24 0 0 0 287.101 41.3 A 354.553 354.553 0 0 1 287.32 38.944 Q 288.063 31.265 288.543 30.512 A 0.418 0.418 0 0 1 288.551 30.5 Q 289.101 29.7 291.301 27.6 A 14.443 14.443 0 0 1 292.323 26.706 Q 293.37 25.88 294.216 25.62 A 2.502 2.502 0 0 1 294.951 25.5 Q 296.315 25.5 296.396 28.865 A 18.206 18.206 0 0 1 296.401 29.3 A 6.385 6.385 0 0 1 296.375 29.828 Q 296.281 30.934 295.851 33.2 Q 295.406 35.544 294.864 36.843 A 6.304 6.304 0 0 1 294.601 37.4 Q 293.515 40.163 293.501 54.318 A 376.317 376.317 0 0 0 293.501 54.7 A 19.016 19.016 0 0 0 293.516 55.478 Q 293.595 57.4 294.101 57.4 Q 295.801 57.3 298.801 53.15 A 46.048 46.048 0 0 0 301.23 49.39 Q 302.999 46.359 304.751 42.5 A 142.796 142.796 0 0 1 305.452 40.977 Q 307.782 36 308.351 36 A 0.746 0.746 0 0 1 308.635 36.05 Q 308.959 36.183 308.996 36.668 A 1.729 1.729 0 0 1 309.001 36.8 A 8.302 8.302 0 0 1 308.82 38.406 Q 308.301 41.001 306.296 45.286 A 73.486 73.486 0 0 1 306.101 45.7 Q 298.201 62.5 292.801 62.5 A 15.187 15.187 0 0 1 290.601 62.351 Q 289.482 62.187 288.579 61.842 A 6.228 6.228 0 0 1 286.901 60.9 A 1.404 1.404 0 0 1 286.611 60.413 Q 286.282 59.566 286.217 57.629 A 30.607 30.607 0 0 1 286.201 56.6 Q 286.201 53 286.501 48.6 A 67.596 67.596 0 0 1 284.501 52.533 Q 283.405 54.513 282.31 56.113 A 27.169 27.169 0 0 1 280.101 58.95 A 12.526 12.526 0 0 1 277.812 60.971 A 8.541 8.541 0 0 1 272.951 62.5 A 11.513 11.513 0 0 1 271.142 62.369 Q 270.217 62.221 269.502 61.907 A 3.878 3.878 0 0 1 267.701 60.4 A 6.488 6.488 0 0 1 267.044 58.898 Q 266.551 57.301 266.436 54.862 A 33.239 33.239 0 0 1 266.401 53.3 Z M 177.901 62.5 Q 174.501 62.5 172.601 61 Q 171.895 60.294 171.812 57.563 A 25.176 25.176 0 0 1 171.801 56.8 Q 171.801 53.4 172.101 47.9 Q 169.401 55.1 166.601 58.8 A 10.152 10.152 0 0 1 164.297 61.055 A 8.145 8.145 0 0 1 159.551 62.5 A 8.637 8.637 0 0 1 153.133 59.692 A 12.407 12.407 0 0 1 152.351 58.8 Q 149.589 55.336 149.413 48.016 A 42.216 42.216 0 0 1 149.401 47 A 24.375 24.375 0 0 1 151.246 37.455 A 23.251 23.251 0 0 1 153.951 32.7 A 15.861 15.861 0 0 1 158.118 28.686 Q 161.501 26.504 165.884 26.5 A 17.522 17.522 0 0 1 165.901 26.5 A 10.494 10.494 0 0 1 169.635 27.222 Q 171.02 27.747 172.446 28.653 A 20.435 20.435 0 0 1 173.401 29.3 A 593.143 593.143 0 0 1 173.796 24.691 Q 174.907 12.337 175.866 8.577 A 6.368 6.368 0 0 1 176.301 7.3 Q 176.88 6.238 178.999 4.243 A 46.498 46.498 0 0 1 179.151 4.1 A 14.535 14.535 0 0 1 180.197 3.206 Q 181.293 2.363 182.178 2.109 A 2.627 2.627 0 0 1 182.901 2 Q 184.401 2 184.401 6.7 A 51.089 51.089 0 0 1 184.236 10.921 Q 183.995 13.825 183.401 16.2 A 5571.821 5571.821 0 0 0 182.459 19.799 Q 180.57 27.025 180.001 29.3 Q 178.929 37.569 178.678 48.065 A 277.489 277.489 0 0 0 178.601 54.7 A 19.016 19.016 0 0 0 178.616 55.478 Q 178.695 57.4 179.201 57.4 Q 180.868 57.307 183.564 53.784 A 33.95 33.95 0 0 0 184.001 53.2 A 42.889 42.889 0 0 0 186.244 49.78 Q 187.408 47.82 188.565 45.486 A 87.905 87.905 0 0 0 189.951 42.55 Q 192.85 36.114 193.528 36.002 A 0.143 0.143 0 0 1 193.551 36 A 0.746 0.746 0 0 1 193.835 36.05 Q 194.159 36.183 194.196 36.668 A 1.729 1.729 0 0 1 194.201 36.8 A 8.302 8.302 0 0 1 194.02 38.406 Q 193.501 41.001 191.496 45.286 A 73.486 73.486 0 0 1 191.301 45.7 Q 183.401 62.5 177.901 62.5 Z M 68.801 40.9 A 47.689 47.689 0 0 0 72.9 39.728 Q 74.901 39.052 76.583 38.248 A 25.605 25.605 0 0 0 77.851 37.6 A 299.217 299.217 0 0 1 78.71 37.131 Q 81.526 35.6 81.701 35.6 A 0.497 0.497 0 0 1 82.177 35.897 Q 82.288 36.118 82.299 36.504 A 3.095 3.095 0 0 1 82.301 36.6 Q 82.301 37.6 80.301 39.1 Q 76.389 41.988 70.654 44.094 A 56.274 56.274 0 0 1 69.801 44.4 A 80.467 80.467 0 0 1 72.31 61.28 A 92.002 92.002 0 0 1 72.401 65.4 A 74.564 74.564 0 0 1 70.676 81.599 A 69.054 69.054 0 0 1 70.301 83.2 A 23.492 23.492 0 0 1 69.048 86.93 Q 68.025 89.266 66.551 91 A 8.9 8.9 0 0 1 64.195 92.997 A 7.708 7.708 0 0 1 60.301 94 A 5.621 5.621 0 0 1 58.537 93.74 Q 56.735 93.147 55.901 91.2 A 21.185 21.185 0 0 1 54.753 88.074 A 15.906 15.906 0 0 1 54.201 84.9 A 101.008 101.008 0 0 1 54.07 82.181 Q 53.919 78.038 53.903 71.24 A 700.561 700.561 0 0 1 53.901 69.6 A 175.837 175.837 0 0 1 54.126 61.031 Q 54.313 57.203 54.657 52.945 A 350.167 350.167 0 0 1 55.501 44 A 10.262 10.262 0 0 1 53.526 42.17 A 6.979 6.979 0 0 1 51.901 37.65 Q 51.901 35.095 52.644 33.329 A 6.46 6.46 0 0 1 53.501 31.85 A 7.468 7.468 0 0 1 55.748 29.89 A 7.112 7.112 0 0 1 57.501 29.2 A 400.143 400.143 0 0 1 58.544 23.013 Q 59.083 19.966 59.615 17.285 A 207.364 207.364 0 0 1 60.251 14.2 A 36.13 36.13 0 0 1 61.557 9.553 Q 62.717 6.326 64.401 3.95 A 15.937 15.937 0 0 1 65.79 2.233 Q 67.895 0 70.001 0 Q 73.201 0 73.201 7.1 Q 73.201 18.3 64.901 32.3 A 20.254 20.254 0 0 1 66.309 34.67 Q 67.62 37.225 68.801 40.9 Z M 350.801 45.7 Q 342.901 62.5 337.451 62.5 A 35.86 35.86 0 0 1 335.565 62.454 Q 331.823 62.256 331.051 61.2 A 2.689 2.689 0 0 1 330.692 60.385 Q 330.111 58.394 330.101 52.79 A 110.467 110.467 0 0 1 330.101 52.6 Q 330.101 47.011 330.922 37.612 A 439.231 439.231 0 0 1 331.501 31.5 A 13.232 13.232 0 0 1 329.538 30.962 Q 326.435 29.822 326.201 27.4 A 1.711 1.711 0 0 1 326.345 26.672 Q 326.683 25.944 327.819 25.824 A 4.577 4.577 0 0 1 328.301 25.8 A 9.355 9.355 0 0 1 330.247 25.994 A 7.29 7.29 0 0 1 332.001 26.6 Q 332.901 19.4 334.101 12 A 6.09 6.09 0 0 1 334.984 9.703 A 8.479 8.479 0 0 1 336.001 8.4 Q 336.954 7.387 337.872 6.978 A 3 3 0 0 1 339.101 6.7 Q 340.401 6.7 340.401 10.8 Q 340.401 12.7 339.001 28.3 Q 341.321 27.87 344.048 26.702 A 35.823 35.823 0 0 0 344.951 26.3 Q 348.04 24.874 348.735 24.804 A 0.657 0.657 0 0 1 348.801 24.8 A 4.405 4.405 0 0 1 349.413 24.839 Q 350.109 24.937 350.397 25.285 A 0.932 0.932 0 0 1 350.601 25.9 A 0.52 0.52 0 0 1 350.603 25.952 Q 350.603 26.92 347.088 28.563 A 35.581 35.581 0 0 1 346.901 28.65 A 36.978 36.978 0 0 1 339.792 31.062 A 41.609 41.609 0 0 1 338.701 31.3 A 577.415 577.415 0 0 0 338.176 38.156 Q 337.712 44.769 337.567 49.494 A 128.281 128.281 0 0 0 337.501 53.4 A 20.351 20.351 0 0 0 337.536 54.657 Q 337.65 56.49 338.132 57.098 A 0.708 0.708 0 0 0 338.701 57.4 Q 340.368 57.307 343.064 53.784 A 33.95 33.95 0 0 0 343.501 53.2 A 42.889 42.889 0 0 0 345.744 49.78 Q 346.908 47.82 348.065 45.486 A 87.905 87.905 0 0 0 349.451 42.55 Q 352.35 36.114 353.028 36.002 A 0.143 0.143 0 0 1 353.051 36 A 0.746 0.746 0 0 1 353.335 36.05 Q 353.659 36.183 353.696 36.668 A 1.729 1.729 0 0 1 353.701 36.8 A 8.302 8.302 0 0 1 353.52 38.406 Q 353.001 41.001 350.996 45.286 A 73.486 73.486 0 0 1 350.801 45.7 Z M 311.601 35.9 L 317.101 35.3 Q 317.901 35.3 318.501 36.2 A 3.583 3.583 0 0 1 318.994 37.274 A 3.219 3.219 0 0 1 319.101 38.1 A 9.179 9.179 0 0 1 319.078 38.644 Q 318.979 40.188 318.451 44.9 A 148.079 148.079 0 0 0 318.108 48.286 Q 317.844 51.26 317.807 53.379 A 38.318 38.318 0 0 0 317.801 54.05 A 29.268 29.268 0 0 0 317.816 55.015 Q 317.88 56.962 318.229 57.319 A 0.237 0.237 0 0 0 318.401 57.4 Q 320.101 57.3 323.101 53.15 A 46.048 46.048 0 0 0 325.53 49.39 Q 327.299 46.359 329.051 42.5 A 142.796 142.796 0 0 1 329.752 40.977 Q 332.082 36 332.651 36 A 0.746 0.746 0 0 1 332.935 36.05 Q 333.259 36.183 333.296 36.668 A 1.729 1.729 0 0 1 333.301 36.8 A 8.302 8.302 0 0 1 333.12 38.406 Q 332.601 41.001 330.596 45.286 A 73.486 73.486 0 0 1 330.401 45.7 Q 322.501 62.5 317.101 62.5 A 15.187 15.187 0 0 1 314.901 62.351 Q 313.782 62.187 312.879 61.842 A 6.228 6.228 0 0 1 311.201 60.9 Q 310.601 60.3 310.515 54.333 A 149.275 149.275 0 0 1 310.501 52.2 Q 310.501 45.536 311.681 40.468 A 33.293 33.293 0 0 1 312.201 38.5 Q 308.428 38.5 306.136 36.935 A 7.077 7.077 0 0 1 304.101 34.8 A 7.816 7.816 0 0 1 302.906 30.798 A 9.418 9.418 0 0 1 302.901 30.5 A 9.742 9.742 0 0 1 303.136 28.316 A 7.654 7.654 0 0 1 303.901 26.3 A 4.101 4.101 0 0 1 304.609 25.351 A 2.945 2.945 0 0 1 306.751 24.5 Q 308.601 24.5 310.151 26.45 Q 311.701 28.4 311.701 30.8 A 8.808 8.808 0 0 1 311.039 34.1 A 11.405 11.405 0 0 1 310.301 35.6 A 1.207 1.207 0 0 0 310.633 35.77 Q 311.009 35.9 311.601 35.9 Z M 115.801 36.6 L 117.001 35.9 Q 117.415 35.652 117.692 35.609 A 0.717 0.717 0 0 1 117.801 35.6 Q 118.601 35.6 118.601 36.5 A 0.984 0.984 0 0 1 118.442 36.977 Q 117.917 37.878 115.663 39.532 A 38.913 38.913 0 0 1 115.501 39.65 Q 112.71 41.676 108.702 43.337 A 48.681 48.681 0 0 1 107.801 43.7 A 28.163 28.163 0 0 1 106.591 49.99 A 20.218 20.218 0 0 1 102.501 57.3 A 14.926 14.926 0 0 1 94.333 61.992 A 22.628 22.628 0 0 1 89.401 62.5 Q 83.201 62.5 79.901 57.55 A 19.651 19.651 0 0 1 76.737 48.581 A 24.881 24.881 0 0 1 76.601 45.95 A 21.978 21.978 0 0 1 80.073 34.14 A 26.703 26.703 0 0 1 80.551 33.4 A 15.46 15.46 0 0 1 83.385 30.163 A 10.989 10.989 0 0 1 90.701 27.5 A 10.724 10.724 0 0 1 95.887 25.576 A 13.733 13.733 0 0 1 97.351 25.5 A 7.507 7.507 0 0 1 101.508 26.797 Q 102.621 27.522 103.68 28.653 A 16.721 16.721 0 0 1 104.501 29.6 A 14.76 14.76 0 0 1 107.292 35.35 Q 107.825 37.477 107.894 39.966 A 26.536 26.536 0 0 1 107.901 40.3 Q 110.87 39.335 112.489 38.563 A 10.548 10.548 0 0 0 113.451 38.05 Q 114.638 37.323 115.385 36.859 A 152.157 152.157 0 0 0 115.801 36.6 Z M 152.201 36.6 L 153.401 35.9 Q 153.815 35.652 154.092 35.609 A 0.717 0.717 0 0 1 154.201 35.6 Q 155.001 35.6 155.001 36.5 A 0.984 0.984 0 0 1 154.842 36.977 Q 154.317 37.878 152.063 39.532 A 38.913 38.913 0 0 1 151.901 39.65 Q 149.11 41.676 145.102 43.337 A 48.681 48.681 0 0 1 144.201 43.7 A 28.163 28.163 0 0 1 142.991 49.99 A 20.218 20.218 0 0 1 138.901 57.3 A 14.926 14.926 0 0 1 130.733 61.992 A 22.628 22.628 0 0 1 125.801 62.5 Q 119.601 62.5 116.301 57.55 A 19.651 19.651 0 0 1 113.137 48.581 A 24.881 24.881 0 0 1 113.001 45.95 A 21.978 21.978 0 0 1 116.473 34.14 A 26.703 26.703 0 0 1 116.951 33.4 A 15.46 15.46 0 0 1 119.785 30.163 A 10.989 10.989 0 0 1 127.101 27.5 A 10.724 10.724 0 0 1 132.287 25.576 A 13.733 13.733 0 0 1 133.751 25.5 A 7.507 7.507 0 0 1 137.908 26.797 Q 139.021 27.522 140.08 28.653 A 16.721 16.721 0 0 1 140.901 29.6 A 14.76 14.76 0 0 1 143.692 35.35 Q 144.225 37.477 144.294 39.966 A 26.536 26.536 0 0 1 144.301 40.3 Q 147.27 39.335 148.889 38.563 A 10.548 10.548 0 0 0 149.851 38.05 Q 151.038 37.323 151.785 36.859 A 152.157 152.157 0 0 0 152.201 36.6 Z M 269.201 36.6 L 270.401 35.9 Q 270.815 35.652 271.092 35.609 A 0.717 0.717 0 0 1 271.201 35.6 Q 272.001 35.6 272.001 36.5 A 0.984 0.984 0 0 1 271.842 36.977 Q 271.317 37.878 269.063 39.532 A 38.913 38.913 0 0 1 268.901 39.65 Q 266.11 41.676 262.102 43.337 A 48.681 48.681 0 0 1 261.201 43.7 A 28.163 28.163 0 0 1 259.991 49.99 A 20.218 20.218 0 0 1 255.901 57.3 A 14.926 14.926 0 0 1 247.733 61.992 A 22.628 22.628 0 0 1 242.801 62.5 Q 236.601 62.5 233.301 57.55 A 19.651 19.651 0 0 1 230.137 48.581 A 24.881 24.881 0 0 1 230.001 45.95 A 21.978 21.978 0 0 1 233.473 34.14 A 26.703 26.703 0 0 1 233.951 33.4 A 15.46 15.46 0 0 1 236.785 30.163 A 10.989 10.989 0 0 1 244.101 27.5 A 10.724 10.724 0 0 1 249.287 25.576 A 13.733 13.733 0 0 1 250.751 25.5 A 7.507 7.507 0 0 1 254.908 26.797 Q 256.021 27.522 257.08 28.653 A 16.721 16.721 0 0 1 257.901 29.6 A 14.76 14.76 0 0 1 260.692 35.35 Q 261.225 37.477 261.294 39.966 A 26.536 26.536 0 0 1 261.301 40.3 Q 264.27 39.335 265.889 38.563 A 10.548 10.548 0 0 0 266.851 38.05 Q 268.038 37.323 268.785 36.859 A 152.157 152.157 0 0 0 269.201 36.6 Z M 61.801 45.9 Q 60.901 58.2 60.901 74.15 A 234.101 234.101 0 0 0 60.942 78.745 Q 61.167 90.1 62.601 90.1 A 2.672 2.672 0 0 0 64.483 89.235 Q 66.265 87.494 67.601 82.25 A 63.052 63.052 0 0 0 69.204 72.957 A 83.515 83.515 0 0 0 69.601 64.65 Q 69.601 54.9 67.401 45.1 Q 64.401 45.9 61.801 45.9 Z M 101.401 45.4 L 97.801 45.6 A 12.759 12.759 0 0 1 93.673 44.955 A 11.034 11.034 0 0 1 90.001 42.85 A 11.329 11.329 0 0 1 88.279 41.032 Q 86.801 39.043 86.801 36.8 A 16.627 16.627 0 0 1 87.011 34.085 Q 87.265 32.552 87.825 31.27 A 10.213 10.213 0 0 1 87.901 31.1 A 9.218 9.218 0 0 0 85.281 34.578 Q 83.896 37.605 83.653 42.382 A 41.664 41.664 0 0 0 83.601 44.5 Q 83.601 49.3 85.601 53.65 A 9.03 9.03 0 0 0 86.991 55.849 A 6.223 6.223 0 0 0 91.901 58 A 8.057 8.057 0 0 0 95.245 57.326 Q 97.232 56.432 98.601 54.35 A 16.468 16.468 0 0 0 100.746 49.434 A 22.633 22.633 0 0 0 101.401 45.4 Z M 137.801 45.4 L 134.201 45.6 A 12.759 12.759 0 0 1 130.073 44.955 A 11.034 11.034 0 0 1 126.401 42.85 A 11.329 11.329 0 0 1 124.679 41.032 Q 123.201 39.043 123.201 36.8 A 16.627 16.627 0 0 1 123.411 34.085 Q 123.665 32.552 124.225 31.27 A 10.213 10.213 0 0 1 124.301 31.1 A 9.218 9.218 0 0 0 121.681 34.578 Q 120.296 37.605 120.053 42.382 A 41.664 41.664 0 0 0 120.001 44.5 Q 120.001 49.3 122.001 53.65 A 9.03 9.03 0 0 0 123.391 55.849 A 6.223 6.223 0 0 0 128.301 58 A 8.057 8.057 0 0 0 131.645 57.326 Q 133.632 56.432 135.001 54.35 A 16.468 16.468 0 0 0 137.146 49.434 A 22.633 22.633 0 0 0 137.801 45.4 Z M 254.801 45.4 L 251.201 45.6 A 12.759 12.759 0 0 1 247.073 44.955 A 11.034 11.034 0 0 1 243.401 42.85 A 11.329 11.329 0 0 1 241.679 41.032 Q 240.201 39.043 240.201 36.8 A 16.627 16.627 0 0 1 240.411 34.085 Q 240.665 32.552 241.225 31.27 A 10.213 10.213 0 0 1 241.301 31.1 A 9.218 9.218 0 0 0 238.681 34.578 Q 237.296 37.605 237.053 42.382 A 41.664 41.664 0 0 0 237.001 44.5 Q 237.001 49.3 239.001 53.65 A 9.03 9.03 0 0 0 240.391 55.849 A 6.223 6.223 0 0 0 245.301 58 A 8.057 8.057 0 0 0 248.645 57.326 Q 250.632 56.432 252.001 54.35 A 16.468 16.468 0 0 0 254.146 49.434 A 22.633 22.633 0 0 0 254.801 45.4 Z M 160.495 33.506 A 20 20 0 0 0 159.901 34.4 Q 157.201 38.7 157.201 44.35 A 36.402 36.402 0 0 0 157.372 47.992 Q 157.699 51.238 158.651 53.6 Q 160.101 57.2 162.301 57.2 A 3.511 3.511 0 0 0 164.632 56.075 Q 168.128 52.814 172.307 40.103 A 161.165 161.165 0 0 0 172.601 39.2 A 529.175 529.175 0 0 0 172.771 37.296 Q 173.056 34.022 173.095 32.973 A 7.669 7.669 0 0 0 173.101 32.7 A 9.803 9.803 0 0 0 168.824 30.497 Q 167.317 30.125 165.543 30.102 A 18.193 18.193 0 0 0 165.301 30.1 Q 162.898 30.1 160.495 33.506 Z M 63.301 30.9 Q 66.201 26.1 68.601 19.55 Q 71.001 13 71.001 8.6 A 33.665 33.665 0 0 0 70.979 7.332 Q 70.86 4.2 70.101 4.2 Q 68.501 4.2 66.651 11.5 A 97.96 97.96 0 0 0 65.529 16.531 Q 64.371 22.386 63.368 30.366 A 313.114 313.114 0 0 0 63.301 30.9 Z M 28.401 21.9 L 18.401 22.2 Q 17.707 30.624 17.21 34.726 A 103.732 103.732 0 0 1 17.201 34.8 L 29.801 33.8 Q 29.954 32.805 30.283 31.165 A 146.437 146.437 0 0 1 30.501 30.1 A 1074.183 1074.183 0 0 1 31.064 26.846 Q 31.354 25.185 31.68 23.346 A 1820.369 1820.369 0 0 1 31.901 22.1 A 5.271 5.271 0 0 0 31.386 22.017 Q 30.392 21.9 28.401 21.9 Z M 100.301 41.7 L 101.501 41.7 Q 101.301 36.8 99.851 32.8 Q 98.401 28.8 95.201 28.8 Q 93.601 28.8 92.701 30.25 Q 91.801 31.7 91.801 33.4 A 8.734 8.734 0 0 0 92.255 36.273 A 7.438 7.438 0 0 0 94.351 39.4 Q 96.901 41.7 100.301 41.7 Z M 136.701 41.7 L 137.901 41.7 Q 137.701 36.8 136.251 32.8 Q 134.801 28.8 131.601 28.8 Q 130.001 28.8 129.101 30.25 Q 128.201 31.7 128.201 33.4 A 8.734 8.734 0 0 0 128.655 36.273 A 7.438 7.438 0 0 0 130.751 39.4 Q 133.301 41.7 136.701 41.7 Z M 253.701 41.7 L 254.901 41.7 Q 254.701 36.8 253.251 32.8 Q 251.801 28.8 248.601 28.8 Q 247.001 28.8 246.101 30.25 Q 245.201 31.7 245.201 33.4 A 8.734 8.734 0 0 0 245.655 36.273 A 7.438 7.438 0 0 0 247.751 39.4 Q 250.301 41.7 253.701 41.7 Z M 63.301 34.9 L 62.701 35.9 L 62.201 41 Q 63.362 41.357 64.323 41.395 A 5.729 5.729 0 0 0 64.551 41.4 A 18.313 18.313 0 0 0 65.26 41.387 Q 65.593 41.374 65.881 41.348 A 8.157 8.157 0 0 0 66.301 41.3 Q 65.001 37.4 63.301 34.9 Z M 57.101 31.7 Q 55.601 32.2 55.601 34 A 6.797 6.797 0 0 0 55.765 35.529 A 5.204 5.204 0 0 0 56.401 37.1 A 217.573 217.573 0 0 1 56.595 35.413 Q 56.876 33.05 57.101 31.7 Z\"\n        vectorEffect=\"non-scaling-stroke\"\n      />\n    </g>\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 512 512',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || ''}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      d=\"M22.4592 6.01238C21.6896 6.35373 20.8624 6.58442 19.9944 6.68815C20.8803 6.15701 21.5609 5.31598 21.8813 4.31378C21.052 4.80564 20.1336 5.16278 19.156 5.3552C18.3732 4.52112 17.2579 4 16.0235 4C13.6534 4 11.7317 5.92147 11.7317 8.29155C11.7317 8.6279 11.7697 8.95546 11.8429 9.2696C8.27609 9.0906 5.11375 7.38203 2.99709 4.78551C2.62765 5.41935 2.41601 6.15656 2.41601 6.94309C2.41601 8.43204 3.17364 9.74563 4.32523 10.5153C3.62179 10.4929 2.95996 10.2999 2.38139 9.97846C2.38098 9.99639 2.38098 10.0143 2.38098 10.0324C2.38098 12.1118 3.86033 13.8463 5.82359 14.2406C5.46349 14.3387 5.08434 14.3912 4.69294 14.3912C4.4164 14.3912 4.14755 14.3642 3.88546 14.3142C4.43161 16.0191 6.01653 17.26 7.89454 17.2945C6.42576 18.4457 4.57527 19.1318 2.56453 19.1318C2.21812 19.1318 1.87651 19.1114 1.54077 19.0717C3.44003 20.2894 5.69591 21 8.1195 21C16.0134 21 20.3302 14.4605 20.3302 8.78918C20.3302 8.60314 20.326 8.41805 20.3177 8.23395C21.1563 7.62886 21.8839 6.87302 22.4592 6.01238Z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 32 32',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || ''}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      d=\"m19.915 13.028c-.388-.49-.277-.708 0-1.146.005-.005 3.208-4.431 3.538-5.932l.002-.001c.164-.547 0-.949-.793-.949h-2.624c-.668 0-.976.345-1.141.731 0 0-1.336 3.198-3.226 5.271-.61.599-.892.791-1.225.791-.164 0-.419-.192-.419-.739v-5.105c0-.656-.187-.949-.74-.949h-4.126c-.419 0-.668.306-.668.591 0 .622.945.765 1.043 2.515v3.797c0 .832-.151.985-.486.985-.892 0-3.057-3.211-4.34-6.886-.259-.713-.512-1.001-1.185-1.001h-2.625c-.749 0-.9.345-.9.731 0 .682.892 4.073 4.148 8.553 2.17 3.058 5.226 4.715 8.006 4.715 1.671 0 1.875-.368 1.875-1.001 0-2.922-.151-3.198.686-3.198.388 0 1.056.192 2.616 1.667 1.783 1.749 2.076 2.532 3.074 2.532h2.624c.748 0 1.127-.368.909-1.094-.499-1.527-3.871-4.668-4.023-4.878z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 30 30',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || ''}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      d=\"M12 3C16.92 3 20.91 6.729 20.91 11.332C20.91 13.948 19.619 16.284 17.599 17.811V21L14.558 19.313C13.747 19.541 12.89 19.663 11.999 19.663C7.07903 19.663 3.08904 15.933 3.08904 11.332C3.09004 6.729 7.08003 3 12 3ZM11.062 14.172L13.367 11.778L17.805 14.232L12.94 9.069L10.635 11.464L6.19603 9.009L11.062 14.172Z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 192 192',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    fill={fill}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path d=\"M7 12H9V14H7V12Z\" fill={fill} />\n    <path d=\"M7 16H9V18H7V16Z\" fill={fill} />\n    <path d=\"M13 12H11V14H13V12Z\" fill={fill} />\n    <path d=\"M11 16H13V18H11V16Z\" fill={fill} />\n    <path d=\"M17 12H15V14H17V12Z\" fill={fill} />\n    <path d=\"M15 16H17V18H15V16Z\" fill={fill} />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M19 22H5C3.897 22 3 21.103 3 20V6C3 4.897 3.897 4 5 4H7V2H9V4H15V2H17V4H19C20.103 4 21 4.897 21 6V20C21 21.103 20.103 22 19 22ZM19.0001 8L19 6H5V8H19.0001ZM19.0003 10L19.001 20H5V10H19.0003Z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 512 512',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || ''}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      d=\"M11.999 7.377C9.44495 7.377 7.37595 9.447 7.37595 12C7.37595 14.554 9.44495 16.624 11.999 16.624C14.551 16.624 16.622 14.554 16.622 12C16.622 9.447 14.551 7.377 11.999 7.377ZM11.999 15.004C10.34 15.004 8.99495 13.659 8.99495 12.001C8.99495 10.342 10.34 8.998 11.999 8.998C13.658 8.998 15.001 10.342 15.001 12.001C15.001 13.659 13.658 15.004 11.999 15.004Z\"\n      fill={fill}\n    />\n    <path\n      d=\"M16.806 8.285C17.4013 8.285 17.884 7.80237 17.884 7.207C17.884 6.61164 17.4013 6.129 16.806 6.129C16.2106 6.129 15.728 6.61164 15.728 7.207C15.728 7.80237 16.2106 8.285 16.806 8.285Z\"\n      fill={fill}\n    />\n    <path\n      d=\"M20.533 6.111C20.064 4.902 19.109 3.946 17.9 3.479C17.201 3.216 16.462 3.075 15.714 3.059C14.751 3.017 14.446 3.005 12.004 3.005C9.56195 3.005 9.24895 3.005 8.29395 3.059C7.54795 3.074 6.80895 3.215 6.10995 3.479C4.89995 3.946 3.94495 4.902 3.47695 6.111C3.21395 6.811 3.07295 7.549 3.05795 8.297C3.01495 9.259 3.00195 9.564 3.00195 12.007C3.00195 14.449 3.00195 14.76 3.05795 15.717C3.07295 16.465 3.21395 17.203 3.47695 17.904C3.94595 19.112 4.90095 20.068 6.11095 20.536C6.80695 20.808 7.54595 20.962 8.29595 20.986C9.25895 21.028 9.56395 21.041 12.006 21.041C14.448 21.041 14.761 21.041 15.716 20.986C16.463 20.971 17.202 20.829 17.902 20.567C19.111 20.098 20.066 19.143 20.535 17.934C20.798 17.234 20.939 16.496 20.954 15.748C20.997 14.786 21.01 14.481 21.01 12.038C21.01 9.59501 21.01 9.285 20.954 8.328C20.941 7.57 20.801 6.819 20.533 6.111ZM19.315 15.643C19.308 16.219 19.204 16.79 19.004 17.331C18.699 18.118 18.078 18.74 17.292 19.042C16.757 19.241 16.193 19.345 15.622 19.353C14.672 19.397 14.404 19.408 11.968 19.408C9.52995 19.408 9.28095 19.408 8.31295 19.353C7.74395 19.346 7.17795 19.241 6.64395 19.042C5.85495 18.741 5.22995 18.119 4.92495 17.331C4.72895 16.797 4.62295 16.232 4.61395 15.662C4.57095 14.712 4.56095 14.444 4.56095 12.008C4.56095 9.571 4.56095 9.322 4.61395 8.353C4.62095 7.777 4.72495 7.207 4.92495 6.666C5.22995 5.877 5.85495 5.256 6.64395 4.954C7.17795 4.756 7.74395 4.651 8.31295 4.643C9.26395 4.6 9.53095 4.588 11.968 4.588C14.405 4.588 14.655 4.588 15.622 4.643C16.193 4.65 16.757 4.755 17.292 4.954C18.078 5.257 18.699 5.879 19.004 6.666C19.2 7.2 19.306 7.765 19.315 8.335C19.358 9.28601 19.369 9.553 19.369 11.99C19.369 14.426 19.369 14.688 19.326 15.644H19.315V15.643Z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 95.334 95.334',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 12 21\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || ''}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      d=\"M10.6484 12.2339H7.71875V20.9839H3.8125V12.2339H0.648438V8.60107H3.8125V5.8667C3.8125 4.82503 4.00781 3.93962 4.39844 3.21045C4.78906 2.48128 5.33594 1.93441 6.03906 1.56982C6.76823 1.1792 7.60156 0.983887 8.53906 0.983887C8.95573 0.983887 9.39844 1.00993 9.86719 1.06201C10.3359 1.08805 10.7005 1.12712 10.9609 1.1792L11.3516 1.21826V4.3042H9.78906C9.0599 4.3042 8.52604 4.49951 8.1875 4.89014C7.875 5.25472 7.71875 5.71045 7.71875 6.25732V8.60107H11.1953L10.6484 12.2339Z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = 'svg--icon',\n  viewBox = '0 0 512 512',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path\n      d=\"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\"\n      fill={fill}\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19ZM12 17C14.7614 17 17 14.7614 17 12C17 9.23858 14.7614 7 12 7C9.23858 7 7 9.23858 7 12C7 14.7614 9.23858 17 12 17Z\"\n      fill={fill}\n    />\n  </svg>\n);\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 496 496',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    fill={fill}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\"\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\n\nconst SVG = ({\n  style = {},\n  fill = 'white',\n  width = '100%',\n  className = '',\n  viewBox = '0 0 512 512',\n}) => (\n  <svg\n    width={width}\n    style={style}\n    height={width}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`svg-icon ${className || ''}`}\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <path d=\"M3 8V6H21V8H3Z\" fill={fill} />\n    <path d=\"M3 13H21V11H3V13Z\" fill={fill} />\n    <path d=\"M12 18H21V16H12V18Z\" fill={fill} />\n  </svg>\n);\n\nexport default SVG;\n","import React from 'react';\nimport './index.css';\nimport FoodCourt from './icons/foodcourt.jsx';\nimport Tweeter from './icons/tweeter.jsx';\nimport VK from './icons/vk';\nimport Messenger from './icons/messenger';\nimport Calendar from './icons/calendar';\nimport Instagram from './icons/instagram';\nimport Facebook from './icons/facebook';\nimport CheckBoxActive from './icons/checkbox-active';\nimport Checkbox from './icons/checkbox';\nimport MenuToggler from './icons/menu-toggler';\nconst Icon = (props) => {\n  switch (props.name) {\n    case 'menu-toggler':\n      return <MenuToggler {...props} />;\n    case 'foodcourt':\n      return <FoodCourt {...props} />;\n    case 'tweeter':\n      return <Tweeter {...props} />;\n    case 'vk':\n      return <VK {...props} />;\n    case 'messenger':\n      return <Messenger {...props} />;\n    case 'calendar':\n      return <Calendar {...props} />;\n    case 'instagram':\n      return <Instagram {...props} />;\n    case 'facebook':\n      return <Facebook {...props} />;\n    case 'checkbox-active':\n      return <CheckBoxActive {...props} />;\n    case 'checkbox':\n      return <Checkbox {...props} />;\n    default:\n      return;\n  }\n};\nexport default Icon;\n","import React, { Fragment } from 'react';\n\nimport Navigation from './Navigation/Navigation';\nimport './Header.css';\nimport Icon from '../../Icons';\nconst Header = () => {\n  return (\n    <Fragment>\n      <div style={{ position: 'relative' }} className=\"row\">\n        <Navigation />\n      </div>\n      <div className=\"line-break\"></div>\n\n      <div className=\"header__hero row\">\n        <div className=\"header__openhours\">\n          <p>Open Mo-Fri: 4PM-6AM Sa-Su: 1PM-8AM</p>\n        </div>\n        <div className=\"header__text\">\n          <div className=\"header__logo\"></div>\n          <h1 className=\"header__heading\">\n            <span className=\"header__heading--main\">Food Court</span>\n            <span className=\"header__heading--sub\">\n              Where hospitability meets <strong> taste </strong>\n            </span>\n          </h1>\n          <div className=\"header__cta\">\n            <span className=\"btn btn--header btn__cta--main\">Quick Book </span>\n            <span className=\"btn btn--header btn__cta--info\">More details</span>\n          </div>\n          <div className=\"header__swipe\">Scroll down for more info </div>\n        </div>\n        <div className=\"header__social\">\n          <div className=\"social__icon--big\">\n            <Icon name=\"vk\" fill=\"#fff\" width=\"28px\" />\n          </div>\n\n          <div className=\"social__icon--big\">\n            <Icon name=\"facebook\" fill=\"#fff\" width=\"28px\" />\n          </div>\n          <div className=\"social__icon--big\">\n            <Icon name=\"tweeter\" fill=\"#fff\" width=\"28px\" />\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './About.css';\n\nimport aboutImage from '../../img/about.jpg';\nconst About = () => {\n  return (\n    <div className=\"about row\">\n      <div className=\"about__text\">\n        <h2>Who we are</h2>\n        <div className=\"line-break--orange\"></div>\n        <p className=\"h2__subheading--main\">\n          At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis\n          praesentium voluptatum deleniti atque corrupti.\n        </p>\n        <br />\n        <p className=\"h2__subheading--second\">\n          At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis\n          praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias\n          excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\n          officia deserunt mollitia animi.\n        </p>\n      </div>\n      <div className=\"about__image\">\n        <img src={aboutImage} alt=\"About us\"></img>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nimport './Chef.css';\nimport chef1 from '../../img/chef-1.jpg';\nimport Icon from '../../Icons';\n\n// TODO: CAROUSSEL\n\nconst Chef = () => {\n  return (\n    <div className=\"chef row\">\n      <div className=\"chef__title\">\n        <p>Our Chef Team</p>\n      </div>\n      <div className=\"chef__content\">\n        <div className=\"chef__content__photo\">\n          <div className=\"chef__image\">\n            <img src={chef1} alt=\"Chef\" />\n          </div>\n        </div>\n        <div className=\"chef__content__text\">\n          <h3>Sous Chef</h3>\n          <p style={{ textAlign: 'justify' }}>\n            At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis\n            praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias\n            excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\n            officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum\n            quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum\n            soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime\n            placeat facere possimus, omnis voluptas assumenda est,\n          </p>\n        </div>\n      </div>\n      <div className=\"chef__actions\">\n        <Icon name=\"checkbox-active\" width=\"14px\" />\n        <Icon name=\"checkbox\" width=\"14px\" />\n        <Icon name=\"checkbox\" width=\"14px\" />\n        <Icon name=\"checkbox\" width=\"14px\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Chef;\n","import React from 'react';\n\nimport './Book.css';\nconst Book = () => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert('Sumbit');\n  };\n  return (\n    <div className=\"book row\">\n      <form className=\"book__form\" onSubmit={handleSubmit}>\n        <h2>Book A Table</h2>\n        <div className=\"line-break--orange\"></div>\n        <div className=\"form__column\">\n          <label>\n            <input type=\"text\" placeholder=\"Name\" />\n          </label>\n          <label>\n            <input type=\"text\" placeholder=\"Last Name\" />\n          </label>\n        </div>\n        <div className=\"form__column\">\n          <label>\n            <input type=\"text\" placeholder=\"Phone\" />\n          </label>\n          <label>\n            <input type=\"number\" placeholder=\"Guests\" />\n          </label>\n        </div>\n        <div className=\"form__column\">\n          <label>\n            <input type=\"date\" placeholder=\"Date here\" />\n          </label>\n          <label>\n            <input type=\"time\" />\n          </label>\n        </div>\n        <div className=\"form__column\">\n          <input\n            style={{ margin: '0.5rem' }}\n            className=\"btn btn__cta--main\"\n            type=\"submit\"\n            placeholder=\"BOOK NOW\"\n          />\n        </div>\n      </form>\n      <div className=\"book__photo\"> </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\n\nimport sliderImg from '../../img/food-cards/assorted-salads.jpg';\n\nimport './Slide.css';\n\nconst Slide = ({ img, name }) => {\n  return (\n    <div className=\"slider\">\n      <img src={img === undefined ? sliderImg : img} alt=\"Slider\"></img>\n      <h3> {name}</h3>\n    </div>\n  );\n};\n\nexport default Slide;\n","import React, { useState, useEffect } from 'react';\n\nimport './Menu.css';\n\nimport Slide from './Slide';\nimport img1 from '../../img/food-cards/assorted-salads.jpg';\nimport img2 from '../../img/food-cards/avocado-cooked.jpg';\nimport img3 from '../../img/food-cards/food-dinner.jpg';\nimport img4 from '../../img/food-cards/blur-breakfast.jpg';\nimport img5 from '../../img/food-cards/chocolate.jpg';\nimport img6 from '../../img/food-cards/dessert.jpg';\nimport img7 from '../../img/food-cards/pasta.jpg';\nimport img8 from '../../img/food-cards/shrimps-salad.jpg';\nimport img9 from '../../img/food-cards/plate.jpg';\n\nconst Menu = ({ items = [] }) => {\n  const [current, setCurrent] = useState(0);\n  const images = [img1, img2, img3, img4, img5, img6, img7, img8, img9];\n  // const carroussel = items.map((item, i) => (\n  //   <div\n  //     className={\n  //       i + 1 === current\n  //         ? 'caroussel-item-next'\n  //         : i === current\n  //         ? 'caroussel-item-active'\n  //         : i - 1 === current\n  //         ? 'caroussel-item-prev'\n  //         : 'caroussel-item'\n  //     }\n  //     key={i}\n  //   >\n  //     {item}\n  //   </div>\n  // ));\n  useEffect(() => {\n    const next = (current + 1) % images.length;\n    const id = setTimeout(() => setCurrent(next), 5000);\n\n    return () => clearTimeout(id);\n  }, [current]);\n\n  const onClick = (e) => {\n    let tag = e.currentTarget.dataset.index;\n    setCurrent(tag);\n  };\n\n  return (\n    <div className=\"menu row\">\n      <h3>Our Menu</h3>\n      <div className=\"menu__caroussel\">\n        <div className=\"menu__image\">\n          <Slide img={images[current]} name=\"Food Name\" description=\"Description\" />\n        </div>\n        <div className=\"menu__controller\">\n          {images.map((item, i) => (\n            <div\n              onClick={onClick}\n              key={i}\n              data-index={i}\n              className={\n                i === current\n                  ? 'menu-controller__image image--active'\n                  : i + 1 === current\n                  ? 'menu-controller__image image--next'\n                  : i - 1 === current\n                  ? 'menu-controller__image image--prev'\n                  : 'menu-controller__image'\n              }\n            >\n              <img src={item} alt=\"Menu Foods\"></img>{' '}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React, { Fragment } from 'react';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport About from './components/About/About';\nimport Chef from './components/Chef/Chef';\nimport Book from './components/Book/Book';\nimport Menu from './components/Menu/Menu';\n\nfunction App() {\n  return (\n    <Fragment>\n      <header id=\"header\">\n        <Header />\n      </header>\n      <section id=\"about\">\n        <About />\n      </section>\n      <section id=\"chef\">\n        <Chef />\n      </section>\n      <section id=\"book\">\n        <Book />\n      </section>\n      <section id=\"menu\">\n        <Menu />\n      </section>\n      <section id=\"events\">\n        events\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </section>\n      <section id=\"blog\">\n        last blog articles\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </section>\n      <section id=\"contact\">\n        contact us <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n      </section>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}